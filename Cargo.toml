[package]
name = "shared-expiry-get"
version = "0.2.0"
authors = ["Florian Merz <me@fiji-flo.de>"]
description = "Simple concurrent async get with expiration for Rust"
edition = "2018"
license = "MIT"
repository = "https://github.com/fiji-flo/shared-expiry-get"
documentation = "https://docs.rs/crate/shared-expiry-get"
keywords = ["cache", "async", "concurrent"]
categories = []
readme = "README.md"
include = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE"]

[dependencies]
thiserror = "1"
futures = "0.3"
log = "0.4"

[dev-dependencies]
anyhow = "1"
chrono = "0.4"
futures-timer = "3.0"
reqwest =  { version = "0.11", features = ["json"] }
headers = "0.3"
tokio = { version = "1", features = ["rt-multi-thread", "macros"] }
serde_json = "1.0.32"
env_logger = "0.8"
